rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function role() { return request.auth.token.role; } // 'admin' | 'coord' | 'tech'
    function isAdmin() { return role() == 'admin'; }
    function isCoord() { return role() == 'coord'; }
    function isTech()  { return role() == 'tech'; }

    function isISODate(s) { return s is string && s.size() == 10 && s.matches('^[0-9]{4}-[0-9]{2}-[0-9]{2}$'); }
    function isNonNegInt(n) { return n is int && n >= 0; }
    function validMoney(obj) {
      return obj is map && isNonNegInt(obj.ticketsCents) && isNonNegInt(obj.transportLocalCents) && isNonNegInt(obj.hotelCents)
             && isNonNegInt(obj.foodCents) && isNonNegInt(obj.hydrationCents) && isNonNegInt(obj.allowanceExtraCents);
    }
    function arrayOfStrings(a) { return a is list && a.size() >= 1 && a.size() <= 20 && a.every(x => x is string && x.size() > 0); }
    function isAssignedTech(opId) { return isSignedIn() && exists(/databases/$(database)/documents/operations/$(opId)/assignments/$(request.auth.uid)); }

    match /operations/{operationId} {
      allow read: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId)));
      allow create, update, delete: if isSignedIn() && (isAdmin() || isCoord());

      match /planning/{dayId} {
        allow read: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId)));
        allow create, update, delete: if isSignedIn() && (isAdmin() || isCoord());
        allow create, update: if request.resource.data.date is string && isISODate(request.resource.data.date)
                              && arrayOfStrings(request.resource.data.techIds)
                              && request.resource.data.plannedAssets is int && request.resource.data.plannedAssets >= 0
                              && validMoney(request.resource.data.plannedCosts);
      }

      match /actuals/{dayId} {
        allow read: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId)));
        allow create, update: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId)))
                              && request.resource.data.date is string && isISODate(request.resource.data.date)
                              && arrayOfStrings(request.resource.data.techIds)
                              && request.resource.data.actualAssets is int && request.resource.data.actualAssets >= 0
                              && validMoney(request.resource.data.actualCosts)
                              && request.resource.data.meta is map
                              && request.resource.data.meta.filledBy == request.auth.uid;
        allow delete: if isSignedIn() && (isAdmin() || isCoord());
      }

      match /attachments/{attachmentId} {
        allow read: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId)));
        allow create: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId)))
                      && request.resource.data.url is string && request.resource.data.url.size() > 10
                      && request.resource.data.publicId is string && request.resource.data.publicId.size() > 3
                      && request.resource.data.uploadedAt != null;
        allow update, delete: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId) && resource.data.meta.filledBy == request.auth.uid));
      }

      match /assignments/{assignmentId} {
        allow read: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId)));
        allow create, update, delete: if isSignedIn() && (isAdmin() || isCoord());
      }

      match /comments/{commentId} {
        allow read: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId)));
        allow create: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId)));
        allow update, delete: if isSignedIn() && (isAdmin() || isCoord() || (isTech() && isAssignedTech(operationId) && resource.data.author == request.auth.uid));
      }
    }

    match /technicians/{techId} {
      allow read: if isSignedIn() && (isAdmin() || isCoord());
      allow create, update, delete: if isSignedIn() && isAdmin();
    }

    match /units/{unitId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isSignedIn() && (isAdmin() || isCoord());
    }

    match /weekendPolicies/{policyId} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && (isAdmin() || isCoord())
                            && request.resource.data.name is string
                            && request.resource.data.weeks is list
                            && request.resource.data.weeks.every(w => w is map && (w.weekIndex is int && w.weekIndex >= 1)
                                  && (w.saturday is string && (w.saturday == 'work' || w.saturday == 'off'))
                                  && (w.sunday is string && (w.sunday == 'work' || w.sunday == 'off')));
      allow delete: if isSignedIn() && isAdmin();
    }

    // Legacy/plans area used by Planner page
    match /plans/{planId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.ownerUid == request.auth.uid;
      match /attachments/{attachmentId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && request.resource.data.ownerUid == request.auth.uid;
        allow delete, update: if isSignedIn() && resource.data.ownerUid == request.auth.uid;
      }
    }
  }
}

